--급여관리 2021-11-02
DROP TABLE EMPLOYEE_TBL_13;
DROP TABLE WORK_TBL_13;

CREATE TABLE EMPLOYEE_TBL_13(
EMPLOYEE_NO NUMBER NOT NULL PRIMARY KEY,
EMPLOYEE_NAME VARCHAR2(20) NOT NULL,
DEPT_NO CHAR(2),
HIRE_DATE DATE,
EMPLOYEE_STATUS CHAR(1)
);

INSERT INTO EMPLOYEE_TBL_13 VALUES(1001,'김을동','10','18/02/10','1');
INSERT INTO EMPLOYEE_TBL_13 VALUES(1002,'박기동','10','18/02/10','2');
INSERT INTO EMPLOYEE_TBL_13 VALUES(1003,'최순자','20','18/02/11','1');
INSERT INTO EMPLOYEE_TBL_13 VALUES(1004,'강하나','20','18/02/11','1');
INSERT INTO EMPLOYEE_TBL_13 VALUES(1005,'채시라','30','18/02/10','1');

CREATE TABLE WORK_TBL_13(
WORK_DATE CHAR(8) NOT NULL,
EMPLOYEE_NO NUMBER NOT NULL,
WORK_IN_TIME VARCHAR(4),
WORK_OUT_TIME VARCHAR(4),
PRIMARY KEY(WORK_DATE, EMPLOYEE_NO)
);

--문제-1 : 1001 아침출근 저녁퇴근
INSERT INTO WORK_TBL_13 VALUES('20180901',1001,'0910','1510');
INSERT INTO WORK_TBL_13 VALUES('20180902',1001,'0910','1510');
INSERT INTO WORK_TBL_13 VALUES('20180903',1001,'0910','1520');
INSERT INTO WORK_TBL_13 VALUES('20180904',1001,'0810','1610');
INSERT INTO WORK_TBL_13 VALUES('20180907',1001,'0910','1630');
INSERT INTO WORK_TBL_13 VALUES('20180908',1001,'0900','1500');
INSERT INTO WORK_TBL_13 VALUES('20180909',1001,'0930','1500');
INSERT INTO WORK_TBL_13 VALUES('20180911',1001,'0920','1540');
INSERT INTO WORK_TBL_13 VALUES('20180912',1001,'0900','1500');

--문제-2 : 1001 저녁출근 새벽퇴근
INSERT INTO WORK_TBL_13 VALUES('20180901',1001,'1910','0510');
INSERT INTO WORK_TBL_13 VALUES('20180902',1001,'1910','0510');
INSERT INTO WORK_TBL_13 VALUES('20180903',1001,'1910','0520');
INSERT INTO WORK_TBL_13 VALUES('20180904',1001,'1810','0610');
INSERT INTO WORK_TBL_13 VALUES('20180907',1001,'1910','0630');
INSERT INTO WORK_TBL_13 VALUES('20180908',1001,'1900','0500');
INSERT INTO WORK_TBL_13 VALUES('20180909',1001,'1930','0500');
INSERT INTO WORK_TBL_13 VALUES('20180911',1001,'1920','0540');
INSERT INTO WORK_TBL_13 VALUES('20180912',1001,'1900','0500');

--1003
INSERT INTO WORK_TBL_13 VALUES('20180911',1003,'1210','1710');
INSERT INTO WORK_TBL_13 VALUES('20180912',1003,'1210','1710');
INSERT INTO WORK_TBL_13 VALUES('20180913',1003,'1210','1720');
INSERT INTO WORK_TBL_13 VALUES('20180914',1003,'1210','1710');
INSERT INTO WORK_TBL_13 VALUES('20180915',1003,'1210','1730');
INSERT INTO WORK_TBL_13 VALUES('20180916',1003,'1200','1700');
INSERT INTO WORK_TBL_13 VALUES('20180917',1003,'1230','1700');
INSERT INTO WORK_TBL_13 VALUES('20180918',1003,'1220','1740');

SELECT* FROM EMPLOYEE_TBL_13;
SELECT* FROM WORK_TBL_13;

/************************************************************************/
-----------------select.jsp-------------
select EMPLOYEE_NO, EMPLOYEE_NAME, DEPT_NO,
to_char(HIRE_DATE. 'yyyy-mm-dd'),
decode(EMPLOYEE_STATUS, '1','입사', '2','퇴직','3','휴직')
from EMPLOYEE_TBL_13
order by EMPLOYEE_NO;

-----------------select2.jsp(방법1)-------------
--1분당 150원(시간당 9000원 -> 9000/60)
--to_date(): '문자->날짜' 데이터 타입으로 변환(날짜를 연산하기 위해서)
select substr(WORK_DATE, 1, 6) as WORK_DATE,  EMPLOYEE_NO,
to_date(WORK_IN_TIME, 'hh24mi') as WORK_IN_TIME,
(case  --'저녁출근 새벽퇴근'도 처리하기 위해
when WORK_IN_TIME>WORK_OUT_TIME then (to_date(WORK_OUT_TIME, 'hh24mi')+1)--  +1의 의미: 하루 추가 
else to_date(WORK_OUT_TIME, 'hh24mi') --'아침출근 저녁퇴근'
end) as WORK_OUT_TIME
from WORK_TBL_13;


select substr(WORK_DATE, 1, 6),  EMPLOYEE_NO,
sum(round((WORK_OUT_TIME - WORK_IN_TIME)*24*60,2))*(9000/60) as salary,--일한 시간(분단위)*분당시급
from (select substr(WORK_DATE, 1, 6) as WORK_DATE,  EMPLOYEE_NO,
		to_date(WORK_IN_TIME, 'hh24mi') as WORK_IN_TIME,
		(case
		when WORK_IN_TIME>WORK_OUT_TIME then (to_date(WORK_OUT_TIME, 'hh24mi')+1)--+1의 의미: 하루 추가 
		else to_date(WORK_OUT_TIME, 'hh24mi') 
		end) as WORK_OUT_TIME
		from WORK_TBL_13)
GROUP BY substr(WORK_DATE, 1, 6),  EMPLOYEE_NO;


-----------------select2.jsp(방법2)-------------
--1. 일한 시간을 분으로 구함
select EMPLOYEE_NO,
(case
when sum(substr(WORK_OUT_TIME,1,2)-substr(WORK_IN_TIME,1,2))>0
then  sum(substr(WORK_OUT_TIME,1,2)-substr(WORK_IN_TIME,1,2))*60 + sum(substr(WORK_OUT_TIME,3,2)-substr(WORK_IN_TIME,3,2))
when sum(substr(WORK_OUT_TIME,1,2)-substr(WORK_IN_TIME,1,2))<0
then  sum(substr(24-WORK_IN_TIME,1,2)+substr(WORK_OUT_TIME,1,2))*60 + sum(substr(WORK_IN_TIME,3,2)-substr(WORK_OUT_TIME,3,2))
end) as total_mi
from WORK_TBL_13
GROUP BY EMPLOYEE_NO;

--2. 일한 시간을 분으로 구함 * (9000/60)
select substr(WORK_DATE, 1, 6),  EMPLOYEE_NO,
(case
when sum(substr(WORK_OUT_TIME,1,2)-substr(WORK_IN_TIME,1,2))>0
then  (sum(substr(WORK_OUT_TIME,1,2)-substr(WORK_IN_TIME,1,2))*60 + sum(substr(WORK_OUT_TIME,3,2)-substr(WORK_IN_TIME,3,2)))*(9000/60)
when sum(substr(WORK_OUT_TIME,1,2)-substr(WORK_IN_TIME,1,2))<0
then  (sum(substr(24-WORK_IN_TIME,1,2)+substr(WORK_OUT_TIME,1,2))*60 + sum(substr(WORK_IN_TIME,3,2)-substr(WORK_OUT_TIME,3,2)))*(9000/60)
end) as salary
from EMPLOYEE_TBL_13 natural join WORK_TBL_13
GROUP BY substr(WORK_DATE, 1, 6),  EMPLOYEE_NO;


